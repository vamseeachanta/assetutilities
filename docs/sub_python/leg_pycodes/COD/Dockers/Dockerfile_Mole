FROM iotpoc2018.azurecr.io/mole-scheduler:1.0.0-amd64

#Accept the MS odbc driver EULA
ENV ACCEPT_EULA=Y

RUN apt-get update &&\
    apt-get -y install  \
        apt-transport-https \
        curl \
        freetds-dev \
        python-pip  \
        python3 \
        python3-pip \
        libboost-python-dev \
        libcurl4-openssl-dev \
        unixodbc-dev   \
        unzip       && \
    pip3 install azure-iothub-device-client==1.3.0.0b0 &&\
    pip install crudini

#Add microsoft apt repo and install ODBC driver
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - &&\
    curl https://packages.microsoft.com/config/ubuntu/18.04/prod.list > /etc/apt/sources.list.d/mssql-release.list &&\
    apt-get update &&\
    apt-get install -y msodbcsql17

#Create a static installation directory for the application
RUN mkdir -p /opt/app/mole-analytics

WORKDIR /opt/app/mole-analytics

## First, install our dependencies. These rarely change, so Docker will rely on a cached image instead of running pip3 install on every single build.
## It is very important that we do this BEFORE we copy our application code over, because the application code changes very often and will invalidate Docker's image cache.
COPY ./BPE_engine/deploy/requirements.txt ./
RUN pip3 install -r requirements.txt

#Deploy the application
COPY . .

# Set Python Path
ENV PYTHONPATH="/opt/app/mole-analytics:${PYTHONPATH}"

# Set working directory for application (Scheduler)
WORKDIR /opt/app/mole-scheduler

# The entrypoint will be inherited from the Scheduler